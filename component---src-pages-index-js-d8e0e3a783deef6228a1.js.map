{"version":3,"file":"component---src-pages-index-js-d8e0e3a783deef6228a1.js","mappings":"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","sources":["webpack://molotow-riot-art/./src/pages/components/blog-entries.js","webpack://molotow-riot-art/./src/pages/index.js"],"sourcesContent":["import React from \"react\";\nimport { graphql, Link, useStaticQuery } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nconst BlogEntries = ({ limitResults, linkPrefix }) => {\n    // TODO: use this in query\n    const blogEntries = useStaticQuery(graphql`\n    query {\n        allMdx(\n            filter: {fileAbsolutePath: {regex: \"/molotow-riot-art/blog/i\" }}\n            sort: {fields: frontmatter___date, order: DESC}\n          ) {\n          nodes {\n            frontmatter {\n              date(formatString: \"DD.MMMM.YYYY\", locale: \"de\")\n              title\n              hero_image_alt\n              hero_image {\n                childImageSharp {\n                    thumb: gatsbyImageData(\n                        width: 350\n                        height: 230\n                        placeholder: BLURRED\n                    )\n                    full: gatsbyImageData(layout: FULL_WIDTH)\n                }\n              }\n            }\n            id\n            slug\n          }\n        }\n      }\n    `);\n\n    const linkPrefixToUse = linkPrefix != undefined ? linkPrefix : '';\n\n    if (limitResults && limitResults > 0 && blogEntries.allMdx?.nodes?.length >= limitResults) {\n        blogEntries.allMdx.nodes = blogEntries.allMdx.nodes.slice(0, limitResults);\n    }\n\n    return (\n        <div className='mrt-card-container mrt-flex-col'>\n            {\n                blogEntries.allMdx.nodes.map((blogEntry) => (\n                    <div key={blogEntry.id} className='mrt-card mrt-default-border mrt-blogentry-card'>\n                        <div className='mrt-blogentry-img'>\n                            <GatsbyImage alt={blogEntry.frontmatter.hero_image_alt}\n                                image={getImage(blogEntry.frontmatter.hero_image.childImageSharp.thumb)}\n                                imgStyle={{ borderRadius: '0px' }}>\n                            </GatsbyImage>\n                        </div>\n                        <div className=\"mrt-card-header\">\n                            <p className='mrt-card-subtitle mrt-mb1'>{blogEntry.frontmatter.date}</p>\n                            <Link key={blogEntry.id} to={linkPrefixToUse + blogEntry.slug}>\n                                <h2 className='mrt-card-title'>{blogEntry.frontmatter.title}</h2>\n                            </Link>\n                        </div>\n                    </div>\n                ))\n            }\n        </div>\n    )\n\n\n}\n\nexport default BlogEntries;","import * as React from 'react'\nimport Layout from './components/layout'\nimport { graphql } from 'gatsby'\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\nimport Lightbox from 'react-image-lightbox';\nimport BlogEntries from './components/blog-entries';\n\nconst IndexPage = ({ data }) => {\n\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [photoIndex, setPhotoIndex] = React.useState(0);\n\n  const mdxNodeData = data.allMdx.nodes[0];\n  const allSpotlightImages = mdxNodeData.frontmatter.spotlight_images;\n\n  const prevIndex = (photoIndex + allSpotlightImages.length - 1) % allSpotlightImages.length\n  const nextIndex = (photoIndex + allSpotlightImages.length + 1) % allSpotlightImages.length\n\n  const imageCaption = allSpotlightImages[photoIndex].subtitle;\n  const imageTitle = allSpotlightImages[photoIndex].title;\n\n  const mainSrc = allSpotlightImages[photoIndex]?.image_path?.childImageSharp?.full?.images?.fallback?.src\n  const nextSrc = allSpotlightImages[nextIndex]?.image_path?.childImageSharp?.full?.images?.fallback?.src\n  const prevSrc = allSpotlightImages[prevIndex]?.image_path?.childImageSharp?.full?.images?.fallback?.src\n\n  const onCloseLightbox = () => {\n    setIsOpen(false)\n  }\n\n  const openLightbox = (imageIndex) => {\n    setPhotoIndex(imageIndex);\n    setIsOpen(true);\n  }\n\n  return (\n    <Layout pageTitle=\"Home\" fullHeroImage={true}>\n\n      <div id='newestBlogEntriesSection' className='main-section-container'>\n        <div className='main-section-title'>\n          <span>Blog</span> News\n        </div>\n        <BlogEntries limitResults={3} linkPrefix={'blog/'}></BlogEntries>\n      </div>\n\n\n      <div id='spotlight' className='main-section-container'>\n        <div className='main-section-title'>\n          Spot<span>light</span>\n        </div>\n        <h1 className='main-section-subtitle'>\n          - {mdxNodeData.frontmatter.spotlight_title} -\n        </h1>\n        <p className='main-section-subtitle-text'>\n          {mdxNodeData.frontmatter.spotlight_text}\n        </p>\n\n        <div className='mrt-card-container mrt-flex-row mrt-flex-center mrt-mt3'>\n          {\n            allSpotlightImages.map((spotLightImage, imageIndex) => (\n              <div key={spotLightImage.name} className='mrt-card mrt-flex-col mrt-flex-center mrt-m2 mrt-accented-border'>\n                <div className='mrt-card-header'>\n                  <h2 className='mrt-card-title'>{spotLightImage.title}</h2>\n                  <p className='mrt-card-subtitle'>{spotLightImage.subtitle}</p>\n                </div>\n                <div className='mrt-card-body'>\n                  <a className='mrt-clickable-img' onClick={() => { openLightbox(imageIndex) }}>\n                    <GatsbyImage alt={spotLightImage.name}\n                      image={getImage(spotLightImage.image_path.childImageSharp.thumb)}\n                      imgStyle={{ borderRadius: '20px' }}>\n                    </GatsbyImage>\n                  </a>\n                </div>\n              </div>\n            ))\n          }\n        </div>\n      </div>\n\n\n      {\n        isOpen && (\n          <Lightbox\n            mainSrc={mainSrc}\n            nextSrc={nextSrc}\n            prevSrc={prevSrc}\n            imageTitle={imageTitle}\n            imageCaption={imageCaption}\n            onCloseRequest={onCloseLightbox}\n            onMovePrevRequest={() =>\n              setPhotoIndex((photoIndex + allSpotlightImages.length - 1) % allSpotlightImages.length)\n            }\n            onMoveNextRequest={() =>\n              setPhotoIndex((photoIndex + 1) % allSpotlightImages.length)\n            }\n          />\n        )\n      }\n\n    </Layout >\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMdx(\n        filter: {fileAbsolutePath: {regex: \"/molotow-riot-art/home/index.mdx/i\" }}\n      ) {\n        nodes {\n          body\n          frontmatter {\n            spotlight_title\n            spotlight_text\n            spotlight_images {\n              name\n              title\n              subtitle\n              image_path {\n                childImageSharp {\n                    thumb: gatsbyImageData(\n                        width: 400\n                        height: 400\n                        placeholder: BLURRED\n                    )\n                    full: gatsbyImageData(layout: FULL_WIDTH)\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n`\n\nexport default IndexPage"],"names":["limitResults","linkPrefix","blogEntries","useStaticQuery","linkPrefixToUse","undefined","allMdx","nodes","length","slice","className","map","blogEntry","key","id","G","alt","frontmatter","hero_image_alt","image","getImage","hero_image","childImageSharp","thumb","imgStyle","borderRadius","date","to","slug","title","data","React","isOpen","setIsOpen","photoIndex","setPhotoIndex","mdxNodeData","allSpotlightImages","spotlight_images","prevIndex","nextIndex","imageCaption","subtitle","imageTitle","mainSrc","image_path","full","images","fallback","src","nextSrc","prevSrc","pageTitle","fullHeroImage","spotlight_title","spotlight_text","spotLightImage","imageIndex","name","onClick","openLightbox","onCloseRequest","onMovePrevRequest","onMoveNextRequest"],"sourceRoot":""}