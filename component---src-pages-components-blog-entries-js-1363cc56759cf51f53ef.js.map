{"version":3,"file":"component---src-pages-components-blog-entries-js-1363cc56759cf51f53ef.js","mappings":"kKAmEA,UA/DoB,SAAC,GAAkC,IAAD,IAA/BA,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,WAE3BC,GAAcC,EAAAA,EAAAA,IAAe,cA6B7BC,EAAgCC,MAAdJ,EAA0BA,EAAa,GAM/D,OAJID,GAAgBA,EAAe,IAAK,UAAAE,EAAYI,cAAZ,mBAAoBC,aAApB,eAA2BC,SAAUR,IACzEE,EAAYI,OAAOC,MAAQL,EAAYI,OAAOC,MAAME,MAAM,EAAGT,IAI7D,uBAAKU,UAAU,mCAEPR,EAAYI,OAAOC,MAAMI,KAAI,SAACC,GAAD,OACzB,uBAAKC,IAAKD,EAAUE,GAAIJ,UAAU,kDAC9B,uBAAKA,UAAU,qBACX,gBAAC,EAAAK,EAAD,CAAaC,IAAKJ,EAAUK,YAAYC,eACpCC,OAAOC,EAAAA,EAAAA,GAASR,EAAUK,YAAYI,WAAWC,gBAAgBC,OACjEC,SAAU,CAAEC,aAAc,UAGlC,uBAAKf,UAAU,mBACX,qBAAGA,UAAU,6BAA6BE,EAAUK,YAAYS,MAChE,gBAAC,KAAD,CAAMb,IAAKD,EAAUE,GAAIa,GAAIvB,EAAkBQ,EAAUgB,MACrD,sBAAIlB,UAAU,kBAAkBE,EAAUK,YAAYY","sources":["webpack://molotow-riot-art/./src/pages/components/blog-entries.js"],"sourcesContent":["import React from \"react\";\nimport { graphql, Link, useStaticQuery } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nconst BlogEntries = ({ limitResults, linkPrefix }) => {\n    // TODO: use this in query\n    const blogEntries = useStaticQuery(graphql`\n    query {\n        allMdx(\n            filter: {fileAbsolutePath: {regex: \"/molotow-riot-art/blog/i\" }}\n            sort: {fields: frontmatter___date, order: DESC}\n          ) {\n          nodes {\n            frontmatter {\n              date(formatString: \"DD.MMMM.YYYY\", locale: \"de\")\n              title\n              hero_image_alt\n              hero_image {\n                childImageSharp {\n                    thumb: gatsbyImageData(\n                        width: 350\n                        height: 230\n                        placeholder: BLURRED\n                    )\n                    full: gatsbyImageData(layout: FULL_WIDTH)\n                }\n              }\n            }\n            id\n            slug\n          }\n        }\n      }\n    `);\n\n    const linkPrefixToUse = linkPrefix != undefined ? linkPrefix : '';\n\n    if (limitResults && limitResults > 0 && blogEntries.allMdx?.nodes?.length >= limitResults) {\n        blogEntries.allMdx.nodes = blogEntries.allMdx.nodes.slice(0, limitResults);\n    }\n\n    return (\n        <div className='mrt-card-container mrt-flex-col'>\n            {\n                blogEntries.allMdx.nodes.map((blogEntry) => (\n                    <div key={blogEntry.id} className='mrt-card mrt-default-border mrt-blogentry-card'>\n                        <div className='mrt-blogentry-img'>\n                            <GatsbyImage alt={blogEntry.frontmatter.hero_image_alt}\n                                image={getImage(blogEntry.frontmatter.hero_image.childImageSharp.thumb)}\n                                imgStyle={{ borderRadius: '0px' }}>\n                            </GatsbyImage>\n                        </div>\n                        <div className=\"mrt-card-header\">\n                            <p className='mrt-card-subtitle mrt-mb1'>{blogEntry.frontmatter.date}</p>\n                            <Link key={blogEntry.id} to={linkPrefixToUse + blogEntry.slug}>\n                                <h2 className='mrt-card-title'>{blogEntry.frontmatter.title}</h2>\n                            </Link>\n                        </div>\n                    </div>\n                ))\n            }\n        </div>\n    )\n\n\n}\n\nexport default BlogEntries;"],"names":["limitResults","linkPrefix","blogEntries","useStaticQuery","linkPrefixToUse","undefined","allMdx","nodes","length","slice","className","map","blogEntry","key","id","G","alt","frontmatter","hero_image_alt","image","getImage","hero_image","childImageSharp","thumb","imgStyle","borderRadius","date","to","slug","title"],"sourceRoot":""}